{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","cop","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","prototype","PropTypes","string","isRequired","AboutText","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2f5c048a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n//import React, { useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/about\">{props.AboutText}</Link>\r\n                </li> */}\r\n              </ul>\r\n              {/* <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n              </form> */}\r\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototype={\r\n    title:PropTypes.string.isRequired,\r\n    AboutText:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'Set the title Here',\r\n    AboutText:'About'\r\n  };","import React, {useState} from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpclick=()=>{\r\n        console.log(\"Uppercase was clicked \" + text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handlelwclick=()=>{\r\n        console.log(\"Uppercase was clicked \" + text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handlecleartext=()=>{\r\n        console.log(\"Uppercase was clicked \" + text);\r\n        let newText=('');\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\",\"success\");\r\n    }\r\n    const handleOnchange=(event)=>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n    const handlecopy=()=>{\r\n        var cop=document.getElementById('mybox');\r\n        cop.select();\r\n        navigator.clipboard.writeText(cop.value);\r\n        props.showAlert(\"Copied to Clipboard\",\"success\");\r\n    }\r\n    const handlextraspaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\",\"success\");\r\n    }\r\n    const [text, setText] = useState('Enter the text here');\r\n    return (\r\n        <>\r\n         <div className=\"container\" style={{color:props.mode==='light'?'#043460':'white'}}>\r\n            <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    {/* <label for=\"mybox\" className=\"form-label\">Example textarea</label> */}\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor:props.mode==='light'?'white':'grey',color:props.mode==='light'?'black':'white'}} id=\"mybox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpclick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handlelwclick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handlecleartext}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handlecopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handlextraspaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color:props.mode==='light'?'#043460':'white'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} Word and {text.length} characters.</p>\r\n            <p>{0.008*text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:'Enter something in the textbox above to preview here'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n    }\r\n    return (\r\n           props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)} ! </strong> {props.alert.msg}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n    )\r\n}\r\n","//import logo from './logo.svg';\n\nimport Navbar from \"./components/Navbar\";\nimport About from \"./components/About\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\n\n//import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n//import './App.css';\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert=(message,type)=>{\n      setAlert({\n        msg:message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 1500);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#043460';\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    {/* <Navbar title=\"TextUtils\" AboutText=\"About TextUtils\"/> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      {/* <Switch> */}\n            {/* <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n            <Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n            {/* </Route> */}\n        {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}